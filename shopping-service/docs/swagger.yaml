basePath: /
definitions:
  domain.Transaction:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      payment_id:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
      status:
        type: string
      total:
        type: number
    type: object
  http.CreateProductRequest:
    properties:
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  http.CreateTransactionRequest:
    properties:
      email:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API untuk produk dan transaksi
  title: Shopping Service API
  version: "1.0"
paths:
  /products:
    get:
      description: Menampilkan seluruh daftar product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Ambil semua product
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Menambahkan product ke database
      parameters:
      - description: Product data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Tambah product baru
      tags:
      - Products
  /products/{id}:
    delete:
      description: Menghapus data product dari database
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Hapus product berdasarkan ID
      tags:
      - Products
    get:
      description: Menampilkan data product spesifik berdasarkan ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Ambil product berdasarkan ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update data product spesifik
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated product data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update product berdasarkan ID
      tags:
      - Products
  /transactions:
    get:
      description: Menampilkan seluruh transaksi
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Ambil semua transaksi
      tags:
      - Transactions
    post:
      consumes:
      - application/json
      description: Menambahkan transaksi dan memanggil Payment Service
      parameters:
      - description: Transaksi data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Tambah transaksi
      tags:
      - Transactions
  /transactions/{id}:
    delete:
      description: Menghapus transaksi dari database
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Hapus transaksi berdasarkan ID
      tags:
      - Transactions
    get:
      description: Menampilkan transaksi spesifik berdasarkan ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Transaction'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Ambil transaksi berdasarkan ID
      tags:
      - Transactions
    put:
      consumes:
      - application/json
      description: Update data transaksi tertentu
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated transaksi data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update transaksi berdasarkan ID
      tags:
      - Transactions
swagger: "2.0"
